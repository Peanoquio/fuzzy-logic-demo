/******************************************************************************/
/*!
\file ImageObj.cpp
\author Oliver Ryan Chong
\par email: oliver.chong\@digipen.edu
\par oliver.chong 900863
\par Course: CS1050
\par Project #03
\date 12/02/2012
\brief
This is the image object that will contain the image related data

Copyright (C) 2011 DigiPen Institute of Technology Singapore
*/
/******************************************************************************/

#include "ImageObj.h"


namespace GraphicsFramework
{
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	The constructor for the ImageObj class
	\param
	\return
	*/
	/******************************************************************************/
	ImageObj::ImageObj( void )
		: m_imageDataPtr( 0 ),
		m_imageTypeCode( 0 ),
		m_imageBpp( 0 ),
		m_imageWidth( 0 ),
		m_imageHeight( 0 ),		
		m_imageSize( 0 ),
		m_internalFormat( 0 )
	{
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	The destructor for the ImageObj class
	\param
	\return
	*/
	/******************************************************************************/
	ImageObj::~ImageObj (void)
	{
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Get the image data
	\param
	\return char *
	the pointer to the image data
	*/
	/******************************************************************************/
	char * ImageObj::GetImageData( void ) const
	{
		return this->m_imageDataPtr;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Set the image data
	\param imageDataPtr
	the pointer to the image data
	\return
	*/
	/******************************************************************************/
	void ImageObj::SetImageData( char * imageDataPtr )
	{
		this->m_imageDataPtr = imageDataPtr;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Instantiate the image data of the mesh
	\param imageSize
	the image size
	\return
	*/
	/******************************************************************************/
	void ImageObj::InstantiateImageData( const unsigned int imageSize )
	{
		this->m_imageDataPtr = new char[ imageSize ];
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Delete the image data of the mesh
	\param
	\return
	*/
	/******************************************************************************/
	void ImageObj::DeleteImageData( void )
	{
		delete [] this->m_imageDataPtr;
		this->m_imageDataPtr = 0;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Get the image size
	\param
	\return unsigned int
	the image size
	*/
	/******************************************************************************/
	const unsigned int ImageObj::GetImageSize( void ) const
	{
		return this->m_imageSize;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Get the internal format
	\param
	\return int
	the internal format
	*/
	/******************************************************************************/
	const int ImageObj::GetInternalFormat( void ) const
	{
		return this->m_internalFormat;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Get the image type code
	\param
	\return unsigned char
	the image type code
	*/
	/******************************************************************************/
	const unsigned char ImageObj::GetImageTypeCode( void ) const
	{
		return this->m_imageTypeCode;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Get the image bits per pixel
	\param
	\return unsigned char
	the image bits per pixel
	*/
	/******************************************************************************/
	const unsigned char ImageObj::GetImageBpp( void ) const
	{
		return this->m_imageBpp;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Get the image width
	\param
	\return unsigned short
	the image width
	*/
	/******************************************************************************/
	const unsigned short ImageObj::GetImageWidth( void ) const
	{
		return this->m_imageWidth;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Get the image height
	\param
	\return unsigned short
	the image height
	*/
	/******************************************************************************/
	const unsigned short ImageObj::GetImageHeight( void ) const
	{
		return this->m_imageHeight;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Set the image size
	\param imageSize
	the image size
	\return
	*/
	/******************************************************************************/
	void ImageObj::SetImageSize( const unsigned int imageSize )
	{
		this->m_imageSize = imageSize;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Set the internal format
	\param internalFormat
	the internal format
	\return
	*/
	/******************************************************************************/
	void ImageObj::SetInternalFormat( const int internalFormat )
	{
		this->m_internalFormat = internalFormat;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Set the image type code
	\param imageTypeCode
	the image type code
	\return
	*/
	/******************************************************************************/
	void ImageObj::SetImageTypeCode( const unsigned char imageTypeCode )
	{
		this->m_imageTypeCode = imageTypeCode;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Set the image bits per pixel
	\param imageBpp
	the image bits per pixel
	\return
	*/
	/******************************************************************************/
	void ImageObj::SetImageBpp( const unsigned char imageBpp )
	{
		this->m_imageBpp = imageBpp;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Set the image width
	\param imageWidth
	the image width
	\return
	*/
	/******************************************************************************/
	void ImageObj::SetImageWidth( const unsigned short imageWidth )
	{
		this->m_imageWidth = imageWidth;
	}


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/******************************************************************************/
	/*!
	Set the image height
	\param imageHeight
	the image height
	\return
	*/
	/******************************************************************************/
	void ImageObj::SetImageHeight( const unsigned short imageHeight )
	{
		this->m_imageHeight = imageHeight;
	}

} //end namespace GraphicsFramework